generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Define the User model
model User {
  id        String   @id @default(cuid())
  username  String   @unique
  fullName  String?
  email     String   @unique
  password  String
  avatar    String?
  bio       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  assignedTasks   Task[]    @relation("assignedTo")
  projectsMembers Project[] @relation("members") // Projects where the user is a member
  projects        Project[] @relation("ProjectAuthor")
}

// Define the Project model
model Project {
  id          String    @id @default(cuid())
  title       String
  description String?
  startDate   DateTime
  endDate     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations
  user    User   @relation("ProjectAuthor", fields: [userId], references: [id], onDelete: Cascade)
  userId  String
  tasks   Task[] // Tasks associated with the project
  members User[] @relation("members") // Users who are members of the project
}

// Define the Task model
model Task {
  id          String  @id @default(cuid())
  title       String
  description String?
  status      String  @default("Todo") // Represent TaskStatus as string
  priority    String?

  // Relations
  assignedTo User[]   @relation("assignedTo")
  project    Project? @relation(fields: [projectId], references: [id])
  projectId  String? // Reference to the Project the task belongs to
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
